{"version":3,"file":"carrier.js","sources":["../../src/carrier.ts"],"sourcesContent":["import type { Integration } from '@sentry/types';\nimport { GLOBAL_OBJ } from '@sentry/utils';\nimport type { AsyncContextStrategy } from './asyncContext/types';\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: SentryCarrier;\n}\n\ninterface SentryCarrier {\n  acs?: AsyncContextStrategy;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: SentryCarrier;\n}\n\ninterface SentryCarrier {\n  acs?: AsyncContextStrategy;\n  /**\n   * Extra Hub properties injected by various SDKs\n   */\n  integrations?: Integration[];\n  extensions?: {\n    /** Extension methods for the hub, which are bound to the current Hub instance */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    [key: string]: Function;\n  };\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  // This ensures a Sentry carrier exists\n  getSentryCarrier(GLOBAL_OBJ);\n  return GLOBAL_OBJ;\n}\n\n/** Will either get the existing sentry carrier, or create a new one. */\nexport function getSentryCarrier(carrier: Carrier): SentryCarrier {\n  if (!carrier.__SENTRY__) {\n    carrier.__SENTRY__ = {\n      extensions: {},\n    };\n  }\n  return carrier.__SENTRY__;\n}\n"],"names":[],"mappings":";;AAIA;AACA;AACA;AACA;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,cAAc,GAAY;AAC1C;AACA,EAAE,gBAAgB,CAAC,UAAU,CAAC,CAAA;AAC9B,EAAE,OAAO,UAAU,CAAA;AACnB,CAAA;AACA;AACA;AACO,SAAS,gBAAgB,CAAC,OAAO,EAA0B;AAClE,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;AAC3B,IAAI,OAAO,CAAC,UAAA,GAAa;AACzB,MAAM,UAAU,EAAE,EAAE;AACpB,KAAK,CAAA;AACL,GAAE;AACF,EAAE,OAAO,OAAO,CAAC,UAAU,CAAA;AAC3B;;;;"}